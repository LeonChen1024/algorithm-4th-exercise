package edu.princeton.cs.exercise.chapter3_2;

/**
 * 3.2.1 Draw the BST that results when you insert the keys E A S Y Q U E S T I O N,
 * in that order (associating the value i with the ith key, as per the convention in the
 * text) into an initially empty tree. How many compares are needed to build the tree?
 * <p>
 * 画出当你插入键 E A S Y Q U E S T I O N 的BST 树,按照给定顺序(关联值 i 为第 i 个键,如正文)插入.
 * 构建这个树需要多少次对比?
 *
 * @author LeonChen
 * @since 3/29/20
 */
class E3_2_01 {

    /**
     * @formatter:off
     * 插入值                        树结果                       总对比次数
     *   E-1                         E-1                          1
     * -----------------------------------------------------------------
     *   A-2                         E-1
     *                            A-2                             1
     * -----------------------------------------------------------------
     *   S-3                         E-1
     *                           A-2     S-3                      2
     * -----------------------------------------------------------------
     *   Y-4                         E-1
     *                           A-2     S-3
     *                                      Y-4                   4
     * -----------------------------------------------------------------
     *   Q-5                         E-1
     *                          A-2       S-3
     *                                Q-5     Y-4                 6
     * -----------------------------------------------------------------
     *   U-6                         E-1
     *                          A-2       S-3
     *                                Q-5     Y-4
     *                                      U-6                   9
     * -----------------------------------------------------------------
     *   E-7                         E-7
     *                          A-2       S-3
     *                                Q-5     Y-4
     *                                      U-6                   10
     * -----------------------------------------------------------------
     *   S-8                         E-7
     *                          A-2       S-8
     *                                Q-5     Y-4
     *                                      U-6                   12
     * -----------------------------------------------------------------
     *   T-9                         E-7
     *                       A-2             S-8
     *                                 Q-5         Y-4
     *                                          U-6
     *                                       T-9                    16
     * -----------------------------------------------------------------
     *   I-10                         E-7
     *                       A-2             S-8
     *                                 Q-5         Y-4
     *                             I-10         U-6
     *                                       T-9                    19
     * -----------------------------------------------------------------
     *   O-11                         E-7
     *                       A-2               S-8
     *                                   Q-5         Y-4
     *                               I-10         U-6
     *                                  O-11    T-9                 23
     * -----------------------------------------------------------------
     *   N-12                         E-7
     *                       A-2               S-8
     *                                   Q-5         Y-4
     *                               I-10         U-6
     *                                  O-11    T-9
     *                                N-12                          28
     * -----------------------------------------------------------------
     *
     *
     *
     *
     */
    public static void main(String[] args) {
    }



}
